name: Clojure CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7.0
        env:
          MONGO_ADM_USER: adm_user
          MONGO_ADM_PASSWORD: please01
          MONGO_APP_USER: app_user
          MONGO_APP_PASSWORD: please02
          MONGO_INITDB_ROOT_USERNAME: adm_user
          MONGO_INITDB_ROOT_PASSWORD: please01
          MONGO_INITDB_DATABASE: admin
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh mongodb://adm_user:please01@localhost/admin --eval 'db.runCommand(""ping"").ok' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: please01
          POSTGRES_USER: adm_user
          POSTGRES_DB: adm_user
          SQL_APP_USER: app_user
          SQL_APP_PASSWORD: please01
          SQL_DDL_USER: ddl_user
          SQL_DDL_PASSWORD: please01
          SQL_ADM_USER: adm_user
          SQL_ADM_PASSWORD: please01
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install server-side dependencies
        run: lein deps

      - name: Install clj-kondo
        uses: dgknght/setup-clj-kondo@master
        with:
          version: '2023.12.15'

      - name: Run linter
        run: clj-kondo --lint src:test --dependencies

      - name: Create the postgres database
        run: lein with-profile +test init-sql

      - name: Migrate the postgres database
        run: lein with-profile +test migrate

      - name: Initialize the MongoDB database
        run: lein with-profile +test init-mongo

      - name: Index the MongoDB database
        run: lein with-profile +test index-mongo

      - name: Run server-side tests
        run: lein with-profile +test cloverage

      - name: Install client-side dependencies
        run: npm install

      - name: Run client-side tests
        run: lein fig:test

  tag:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Tag with the version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: tag
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: web
            image: dgknght/multi-money-web
          - target: util
            image: dgknght/multi-money-util
    env:
      GOOGLE_OAUTH_CLIENT_ID: build-client-id
      GOOGLE_OAUTH_CLIENT_SECRET: build-client-secret
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log into docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tags and labels
        id: meta
        uses: docker/metadata-action@v5.4.0
        with:
          images: ${{ matrix.image }}
          flavor: |
            latest=auto
            suffix=-{{sha}}

      - name: Build and push the docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.output.labels }}
